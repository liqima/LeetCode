class Solution:
    def countAndSay(self, n):
        """
        :type n: int
        :rtype: str
        """
        pass_num = 1
        number = '1'
        while pass_num < n:
            temp_number = ''
            times = 1
            for i in range(1, len(number)):
                if number[i] == number[i - 1]:
                    times += 1
                else:
                    temp_number += str(times) + number[i - 1]
                    times = 1
            temp_number += str(times) + number[len(number) - 1]
            number = temp_number
            pass_num += 1
        return number
        
# solution 2
        # my_dict = {1:'1', 2:'11', 3:'21', 4:'1211', 5:'111221'}
        # if n <= 5:
        #     return my_dict[n]
        # else:
        #     start = 6
        #     say_front = '111221'
        #     while start <= n:
        #         say_current = ''
        #         position = 0
        #         number = 1
        #         for i in range(1, len(say_front)):
        #             if say_front[i] == say_front[position]:
        #                 number += 1
        #             else:
        #                 say_current = say_current + str(number) + say_front[i - 1]
        #                 number = 1
        #                 position = i
        #         say_current = say_current + str(number) + say_front[len(say_front) - 1]
        #         say_front = say_current
        #         start += 1
        # return say_front
