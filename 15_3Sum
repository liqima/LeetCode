class Solution:
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        if len(nums) < 3:
            return []
        elif len(nums) == 3:
            if nums[0] + nums[1] + nums[2] == 0:
                return [sorted(nums)]
            else:
                return []

        nums = sorted(nums)
        res = []
        for i in range(len(nums) - 2):
            if i > 0 and nums[i] == nums[i - 1]:
                continue
            j, k = i + 1, len(nums) - 1
            while j < k:
                if j > i + 1 and nums[j] == nums[j - 1]:
                    j += 1
                    continue
                if k < len(nums) - 1 and nums[k] == nums[k + 1]:
                    k -= 1
                    continue
                temp_sum = nums[i] + nums[j] + nums[k]
                if temp_sum == 0:
                    res.append([nums[i], nums[j], nums[k]])
                    j += 1
                elif temp_sum < 0:
                    j += 1
                else:
                    k -= 1
        return res

s = Solution()
print(s.threeSum([-2, 2, 1, 1, 1, -1, -1, -1, -1, 0, 0, 0, 2]))
